// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module expand_mat_KeccakF1600_StatePermute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_address0,
        state_ce0,
        state_we0,
        state_d0,
        state_q0,
        state_address1,
        state_ce1,
        state_we1,
        state_d1,
        state_q1
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] state_address0;
output   state_ce0;
output   state_we0;
output  [63:0] state_d0;
input  [63:0] state_q0;
output  [4:0] state_address1;
output   state_ce1;
output   state_we1;
output  [63:0] state_d1;
input  [63:0] state_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] state_address0;
reg state_ce0;
reg state_we0;
reg[63:0] state_d0;
reg[4:0] state_address1;
reg state_ce1;
reg state_we1;
reg[63:0] state_d1;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] KeccakF_RoundConstants_address0;
reg    KeccakF_RoundConstants_ce0;
wire   [63:0] KeccakF_RoundConstants_q0;
wire   [4:0] state_addr_reg_3861;
wire   [4:0] state_addr_1_reg_3866;
wire    ap_CS_fsm_state2;
wire   [4:0] state_addr_2_reg_3871;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [4:0] state_addr_24_reg_4002;
reg   [4:0] round_1_reg_4007;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln128_fu_813_p2;
wire   [63:0] Eba_fu_1216_p2;
reg   [63:0] Eba_reg_4020;
wire    ap_CS_fsm_state16;
wire   [63:0] Ebe_fu_1234_p2;
reg   [63:0] Ebe_reg_4026;
wire   [63:0] Ebi_fu_1252_p2;
reg   [63:0] Ebi_reg_4032;
wire   [63:0] Ebo_fu_1270_p2;
reg   [63:0] Ebo_reg_4038;
wire   [63:0] Ebu_fu_1288_p2;
reg   [63:0] Ebu_reg_4044;
wire   [35:0] trunc_ln162_fu_1300_p1;
reg   [35:0] trunc_ln162_reg_4050;
reg   [27:0] lshr_ln9_reg_4055;
wire   [43:0] trunc_ln164_fu_1320_p1;
reg   [43:0] trunc_ln164_reg_4060;
reg   [19:0] lshr_ln_reg_4065;
wire   [60:0] trunc_ln166_fu_1340_p1;
reg   [60:0] trunc_ln166_reg_4070;
reg   [2:0] lshr_ln1_reg_4075;
wire   [18:0] trunc_ln168_fu_1360_p1;
reg   [18:0] trunc_ln168_reg_4080;
reg   [44:0] lshr_ln2_reg_4085;
wire   [2:0] trunc_ln170_fu_1380_p1;
reg   [2:0] trunc_ln170_reg_4090;
reg   [60:0] lshr_ln3_reg_4095;
wire   [63:0] Eka_fu_1544_p2;
reg   [63:0] Eka_reg_4100;
wire   [63:0] Eke_fu_1562_p2;
reg   [63:0] Eke_reg_4106;
wire   [63:0] Eki_fu_1580_p2;
reg   [63:0] Eki_reg_4112;
wire   [63:0] Eko_fu_1598_p2;
reg   [63:0] Eko_reg_4118;
wire   [63:0] Eku_fu_1616_p2;
reg   [63:0] Eku_reg_4124;
wire   [36:0] trunc_ln194_fu_1628_p1;
reg   [36:0] trunc_ln194_reg_4130;
reg   [26:0] lshr_ln13_reg_4135;
wire   [27:0] trunc_ln196_fu_1648_p1;
reg   [27:0] trunc_ln196_reg_4140;
reg   [35:0] lshr_ln14_reg_4145;
wire   [53:0] trunc_ln198_fu_1668_p1;
reg   [53:0] trunc_ln198_reg_4150;
reg   [9:0] lshr_ln15_reg_4155;
wire   [48:0] trunc_ln200_fu_1688_p1;
reg   [48:0] trunc_ln200_reg_4160;
reg   [14:0] lshr_ln16_reg_4165;
wire   [7:0] trunc_ln202_fu_1708_p1;
reg   [7:0] trunc_ln202_reg_4170;
reg   [55:0] lshr_ln17_reg_4175;
wire   [1:0] trunc_ln210_fu_1728_p1;
reg   [1:0] trunc_ln210_reg_4180;
reg   [61:0] lshr_ln18_reg_4185;
wire   [8:0] trunc_ln212_fu_1748_p1;
reg   [8:0] trunc_ln212_reg_4190;
reg   [54:0] lshr_ln19_reg_4195;
wire   [24:0] trunc_ln214_fu_1768_p1;
reg   [24:0] trunc_ln214_reg_4200;
reg   [38:0] lshr_ln20_reg_4205;
wire   [22:0] trunc_ln216_fu_1788_p1;
reg   [22:0] trunc_ln216_reg_4210;
reg   [40:0] lshr_ln21_reg_4215;
wire   [61:0] trunc_ln218_fu_1808_p1;
reg   [61:0] trunc_ln218_reg_4220;
reg   [1:0] lshr_ln22_reg_4225;
wire   [63:0] zext_ln128_fu_808_p1;
wire   [63:0] zext_ln250_fu_1827_p1;
reg   [63:0] Aso_1_fu_216;
wire   [63:0] Aso_3_fu_3530_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
reg   [63:0] Asi_1_fu_220;
wire   [63:0] Asi_3_fu_3512_p2;
reg   [63:0] Ase_1_fu_224;
wire   [63:0] Ase_3_fu_3494_p2;
wire    ap_CS_fsm_state27;
reg   [63:0] Asa_1_fu_228;
wire   [63:0] Asa_3_fu_3476_p2;
reg   [63:0] Amu_1_fu_232;
wire   [63:0] Amu_3_fu_3320_p2;
wire    ap_CS_fsm_state26;
reg   [63:0] Amo_1_fu_236;
wire   [63:0] Amo_3_fu_3302_p2;
reg   [63:0] Ami_1_fu_240;
wire   [63:0] Ami_3_fu_3284_p2;
wire    ap_CS_fsm_state25;
reg   [63:0] Ame_1_fu_244;
wire   [63:0] Ame_3_fu_3266_p2;
reg   [63:0] Ama_1_fu_248;
wire   [63:0] Ama_3_fu_3248_p2;
wire    ap_CS_fsm_state24;
reg   [63:0] Aku_1_fu_252;
wire   [63:0] Aku_3_fu_3092_p2;
reg   [63:0] Ako_1_fu_256;
wire   [63:0] Ako_3_fu_3074_p2;
wire    ap_CS_fsm_state23;
reg   [63:0] Aki_1_fu_260;
wire   [63:0] Aki_3_fu_3056_p2;
reg   [63:0] Ake_1_fu_264;
wire   [63:0] Ake_3_fu_3038_p2;
wire    ap_CS_fsm_state22;
reg   [63:0] Aka_1_fu_268;
wire   [63:0] Aka_3_fu_3020_p2;
reg   [63:0] Agu_1_fu_272;
wire   [63:0] Agu_3_fu_2866_p2;
wire    ap_CS_fsm_state21;
reg   [63:0] Ago_1_fu_276;
wire   [63:0] Ago_3_fu_2848_p2;
reg   [63:0] Agi_1_fu_280;
wire   [63:0] Agi_3_fu_2830_p2;
wire    ap_CS_fsm_state20;
reg   [63:0] Age_1_fu_284;
wire   [63:0] Age_3_fu_2812_p2;
reg   [63:0] Aga_1_fu_288;
wire   [63:0] Aga_3_fu_2794_p2;
wire    ap_CS_fsm_state19;
reg   [63:0] Abu_1_fu_292;
wire   [63:0] Abu_3_fu_2638_p2;
reg   [63:0] Abo_1_fu_296;
wire   [63:0] Abo_3_fu_2620_p2;
wire    ap_CS_fsm_state18;
reg   [63:0] Abi_1_fu_300;
wire   [63:0] Abi_3_fu_2602_p2;
reg   [63:0] Abe_1_fu_304;
wire   [63:0] Abe_3_fu_2584_p2;
reg   [63:0] Aba_1_fu_308;
wire   [63:0] Aba_3_fu_2566_p2;
reg   [63:0] Asu_1_fu_312;
wire   [63:0] Asu_3_fu_3548_p2;
wire    ap_CS_fsm_state29;
reg   [4:0] round_fu_316;
wire   [4:0] add_ln128_fu_819_p2;
wire   [63:0] xor_ln131_1_fu_836_p2;
wire   [63:0] xor_ln131_2_fu_842_p2;
wire   [63:0] xor_ln131_fu_830_p2;
wire   [63:0] xor_ln132_1_fu_860_p2;
wire   [63:0] xor_ln132_2_fu_866_p2;
wire   [63:0] xor_ln132_fu_854_p2;
wire   [63:0] xor_ln133_1_fu_884_p2;
wire   [63:0] xor_ln133_2_fu_890_p2;
wire   [63:0] xor_ln133_fu_878_p2;
wire   [63:0] xor_ln134_1_fu_908_p2;
wire   [63:0] xor_ln134_2_fu_914_p2;
wire   [63:0] xor_ln134_fu_902_p2;
wire   [63:0] xor_ln135_1_fu_932_p2;
wire   [63:0] xor_ln135_2_fu_938_p2;
wire   [63:0] xor_ln135_fu_926_p2;
wire   [63:0] BCe_fu_872_p2;
wire   [62:0] trunc_ln138_fu_950_p1;
wire   [0:0] tmp_fu_954_p3;
wire   [63:0] or_ln_fu_962_p3;
wire   [63:0] BCu_fu_944_p2;
wire   [63:0] BCi_fu_896_p2;
wire   [62:0] trunc_ln139_fu_976_p1;
wire   [0:0] tmp_1_fu_980_p3;
wire   [63:0] or_ln1_fu_988_p3;
wire   [63:0] BCa_fu_848_p2;
wire   [63:0] BCo_fu_920_p2;
wire   [62:0] trunc_ln140_fu_1002_p1;
wire   [0:0] tmp_2_fu_1006_p3;
wire   [63:0] or_ln2_fu_1014_p3;
wire   [62:0] trunc_ln141_fu_1028_p1;
wire   [0:0] tmp_3_fu_1032_p3;
wire   [63:0] or_ln3_fu_1040_p3;
wire   [62:0] trunc_ln142_fu_1054_p1;
wire   [0:0] tmp_4_fu_1058_p3;
wire   [63:0] or_ln4_fu_1066_p3;
wire   [63:0] Da_fu_970_p2;
wire   [63:0] De_fu_996_p2;
wire   [63:0] Age_2_fu_1086_p2;
wire   [19:0] trunc_ln147_fu_1092_p1;
wire   [43:0] lshr_ln5_fu_1096_p4;
wire   [63:0] Di_fu_1022_p2;
wire   [63:0] Aki_2_fu_1114_p2;
wire   [20:0] trunc_ln149_fu_1120_p1;
wire   [42:0] lshr_ln6_fu_1124_p4;
wire   [63:0] Do_fu_1048_p2;
wire   [63:0] Amo_2_fu_1142_p2;
wire   [42:0] trunc_ln151_fu_1148_p1;
wire   [20:0] lshr_ln7_fu_1152_p4;
wire   [63:0] Du_fu_1074_p2;
wire   [63:0] Asu_2_fu_1170_p2;
wire   [49:0] trunc_ln153_fu_1176_p1;
wire   [13:0] lshr_ln8_fu_1180_p4;
wire   [63:0] BCe_1_fu_1106_p3;
wire   [63:0] BCi_1_fu_1134_p3;
wire   [63:0] xor_ln154_fu_1198_p2;
wire   [63:0] and_ln154_fu_1204_p2;
wire   [63:0] Aba_4_fu_1080_p2;
wire   [63:0] xor_ln155_fu_1210_p2;
wire   [63:0] BCo_1_fu_1162_p3;
wire   [63:0] xor_ln156_fu_1222_p2;
wire   [63:0] and_ln156_fu_1228_p2;
wire   [63:0] BCu_1_fu_1190_p3;
wire   [63:0] xor_ln157_fu_1240_p2;
wire   [63:0] and_ln157_fu_1246_p2;
wire   [63:0] xor_ln158_fu_1258_p2;
wire   [63:0] and_ln158_fu_1264_p2;
wire   [63:0] xor_ln159_fu_1276_p2;
wire   [63:0] and_ln159_fu_1282_p2;
wire   [63:0] Abo_2_fu_1294_p2;
wire   [63:0] Agu_2_fu_1314_p2;
wire   [63:0] Aka_2_fu_1334_p2;
wire   [63:0] Ame_2_fu_1354_p2;
wire   [63:0] Asi_2_fu_1374_p2;
wire   [63:0] Abe_2_fu_1394_p2;
wire   [62:0] trunc_ln178_fu_1400_p1;
wire   [0:0] tmp_5_fu_1404_p3;
wire   [63:0] Agi_2_fu_1420_p2;
wire   [57:0] trunc_ln180_fu_1426_p1;
wire   [5:0] lshr_ln4_fu_1430_p4;
wire   [63:0] Ako_2_fu_1448_p2;
wire   [38:0] trunc_ln182_fu_1454_p1;
wire   [24:0] lshr_ln10_fu_1458_p4;
wire   [63:0] Amu_2_fu_1476_p2;
wire   [55:0] trunc_ln184_fu_1482_p1;
wire   [7:0] lshr_ln11_fu_1486_p4;
wire   [63:0] Asa_2_fu_1504_p2;
wire   [45:0] trunc_ln186_fu_1510_p1;
wire   [17:0] lshr_ln12_fu_1514_p4;
wire   [63:0] BCe_3_fu_1440_p3;
wire   [63:0] BCi_3_fu_1468_p3;
wire   [63:0] xor_ln187_fu_1532_p2;
wire   [63:0] and_ln187_fu_1538_p2;
wire   [63:0] BCa_3_fu_1412_p3;
wire   [63:0] BCo_3_fu_1496_p3;
wire   [63:0] xor_ln188_fu_1550_p2;
wire   [63:0] and_ln188_fu_1556_p2;
wire   [63:0] BCu_3_fu_1524_p3;
wire   [63:0] xor_ln189_fu_1568_p2;
wire   [63:0] and_ln189_fu_1574_p2;
wire   [63:0] xor_ln190_fu_1586_p2;
wire   [63:0] and_ln190_fu_1592_p2;
wire   [63:0] xor_ln191_fu_1604_p2;
wire   [63:0] and_ln191_fu_1610_p2;
wire   [63:0] Abu_2_fu_1622_p2;
wire   [63:0] Aga_2_fu_1642_p2;
wire   [63:0] Ake_2_fu_1662_p2;
wire   [63:0] Ami_2_fu_1682_p2;
wire   [63:0] Aso_2_fu_1702_p2;
wire   [63:0] Abi_2_fu_1722_p2;
wire   [63:0] Ago_2_fu_1742_p2;
wire   [63:0] Aku_2_fu_1762_p2;
wire   [63:0] Ama_2_fu_1782_p2;
wire   [63:0] Ase_2_fu_1802_p2;
wire   [4:0] or_ln250_fu_1822_p2;
wire   [63:0] BCe_2_fu_1838_p3;
wire   [63:0] BCi_2_fu_1844_p3;
wire   [63:0] xor_ln171_fu_1862_p2;
wire   [63:0] and_ln171_fu_1868_p2;
wire   [63:0] BCa_2_fu_1832_p3;
wire   [63:0] BCo_2_fu_1850_p3;
wire   [63:0] xor_ln172_fu_1880_p2;
wire   [63:0] and_ln172_fu_1886_p2;
wire   [63:0] BCu_2_fu_1856_p3;
wire   [63:0] xor_ln173_fu_1898_p2;
wire   [63:0] and_ln173_fu_1904_p2;
wire   [63:0] xor_ln174_fu_1916_p2;
wire   [63:0] and_ln174_fu_1922_p2;
wire   [63:0] xor_ln175_fu_1934_p2;
wire   [63:0] and_ln175_fu_1940_p2;
wire   [63:0] BCe_4_fu_1958_p3;
wire   [63:0] BCi_4_fu_1964_p3;
wire   [63:0] xor_ln203_fu_1982_p2;
wire   [63:0] and_ln203_fu_1988_p2;
wire   [63:0] BCa_4_fu_1952_p3;
wire   [63:0] BCo_4_fu_1970_p3;
wire   [63:0] xor_ln204_fu_2000_p2;
wire   [63:0] and_ln204_fu_2006_p2;
wire   [63:0] BCu_4_fu_1976_p3;
wire   [63:0] xor_ln205_fu_2018_p2;
wire   [63:0] and_ln205_fu_2024_p2;
wire   [63:0] xor_ln206_fu_2036_p2;
wire   [63:0] and_ln206_fu_2042_p2;
wire   [63:0] xor_ln207_fu_2054_p2;
wire   [63:0] and_ln207_fu_2060_p2;
wire   [63:0] BCe_5_fu_2078_p3;
wire   [63:0] BCi_5_fu_2084_p3;
wire   [63:0] xor_ln219_fu_2102_p2;
wire   [63:0] BCa_5_fu_2072_p3;
wire   [63:0] and_ln219_fu_2108_p2;
wire   [63:0] BCo_5_fu_2090_p3;
wire   [63:0] xor_ln220_fu_2120_p2;
wire   [63:0] and_ln220_fu_2126_p2;
wire   [63:0] BCu_5_fu_2096_p3;
wire   [63:0] xor_ln221_fu_2138_p2;
wire   [63:0] and_ln221_fu_2144_p2;
wire   [63:0] xor_ln222_fu_2156_p2;
wire   [63:0] and_ln222_fu_2162_p2;
wire   [63:0] xor_ln223_fu_2174_p2;
wire   [63:0] and_ln223_fu_2180_p2;
wire   [63:0] Ema_fu_1994_p2;
wire   [63:0] Esa_fu_2114_p2;
wire   [63:0] xor_ln226_1_fu_2197_p2;
wire   [63:0] Ega_fu_1874_p2;
wire   [63:0] xor_ln226_2_fu_2202_p2;
wire   [63:0] xor_ln226_fu_2192_p2;
wire   [63:0] Ege_fu_1892_p2;
wire   [63:0] Eme_fu_2012_p2;
wire   [63:0] xor_ln227_1_fu_2220_p2;
wire   [63:0] Ese_fu_2132_p2;
wire   [63:0] xor_ln227_2_fu_2224_p2;
wire   [63:0] xor_ln227_fu_2214_p2;
wire   [63:0] Emi_fu_2030_p2;
wire   [63:0] Esi_fu_2150_p2;
wire   [63:0] Egi_fu_1910_p2;
wire   [63:0] xor_ln228_1_fu_2241_p2;
wire   [63:0] xor_ln228_2_fu_2247_p2;
wire   [63:0] xor_ln228_fu_2236_p2;
wire   [63:0] Emo_fu_2048_p2;
wire   [63:0] Ego_fu_1928_p2;
wire   [63:0] Eso_fu_2168_p2;
wire   [63:0] xor_ln229_1_fu_2264_p2;
wire   [63:0] xor_ln229_2_fu_2269_p2;
wire   [63:0] xor_ln229_fu_2258_p2;
wire   [63:0] Egu_fu_1946_p2;
wire   [63:0] Esu_fu_2186_p2;
wire   [63:0] xor_ln230_1_fu_2285_p2;
wire   [63:0] Emu_fu_2066_p2;
wire   [63:0] xor_ln230_2_fu_2290_p2;
wire   [63:0] xor_ln230_fu_2280_p2;
wire   [63:0] BCe_6_fu_2230_p2;
wire   [62:0] trunc_ln233_fu_2302_p1;
wire   [0:0] tmp_6_fu_2306_p3;
wire   [63:0] or_ln5_fu_2314_p3;
wire   [63:0] BCu_6_fu_2296_p2;
wire   [63:0] BCi_6_fu_2252_p2;
wire   [62:0] trunc_ln234_fu_2328_p1;
wire   [0:0] tmp_7_fu_2332_p3;
wire   [63:0] BCa_6_fu_2208_p2;
wire   [63:0] or_ln6_fu_2340_p3;
wire   [63:0] BCo_6_fu_2274_p2;
wire   [62:0] trunc_ln235_fu_2354_p1;
wire   [0:0] tmp_8_fu_2358_p3;
wire   [63:0] or_ln7_fu_2366_p3;
wire   [62:0] trunc_ln236_fu_2380_p1;
wire   [0:0] tmp_9_fu_2384_p3;
wire   [63:0] or_ln8_fu_2392_p3;
wire   [62:0] trunc_ln237_fu_2406_p1;
wire   [0:0] tmp_10_fu_2410_p3;
wire   [63:0] or_ln9_fu_2418_p3;
wire   [63:0] Da_1_fu_2322_p2;
wire   [63:0] De_1_fu_2348_p2;
wire   [63:0] Ege_1_fu_2437_p2;
wire   [19:0] trunc_ln242_fu_2443_p1;
wire   [43:0] lshr_ln23_fu_2447_p4;
wire   [63:0] Di_1_fu_2374_p2;
wire   [63:0] Eki_1_fu_2465_p2;
wire   [20:0] trunc_ln244_fu_2470_p1;
wire   [42:0] lshr_ln24_fu_2474_p4;
wire   [63:0] Do_1_fu_2400_p2;
wire   [63:0] Emo_1_fu_2492_p2;
wire   [42:0] trunc_ln246_fu_2498_p1;
wire   [20:0] lshr_ln25_fu_2502_p4;
wire   [63:0] Du_1_fu_2426_p2;
wire   [63:0] Esu_1_fu_2520_p2;
wire   [49:0] trunc_ln248_fu_2526_p1;
wire   [13:0] lshr_ln26_fu_2530_p4;
wire   [63:0] BCe_7_fu_2457_p3;
wire   [63:0] BCi_7_fu_2484_p3;
wire   [63:0] xor_ln249_fu_2548_p2;
wire   [63:0] Eba_2_fu_2432_p2;
wire   [63:0] and_ln249_fu_2554_p2;
wire   [63:0] xor_ln250_fu_2560_p2;
wire   [63:0] BCo_7_fu_2512_p3;
wire   [63:0] xor_ln251_fu_2572_p2;
wire   [63:0] and_ln251_fu_2578_p2;
wire   [63:0] BCu_7_fu_2540_p3;
wire   [63:0] xor_ln252_fu_2590_p2;
wire   [63:0] and_ln252_fu_2596_p2;
wire   [63:0] xor_ln253_fu_2608_p2;
wire   [63:0] and_ln253_fu_2614_p2;
wire   [63:0] xor_ln254_fu_2626_p2;
wire   [63:0] and_ln254_fu_2632_p2;
wire   [63:0] Ebo_1_fu_2644_p2;
wire   [35:0] trunc_ln257_fu_2649_p1;
wire   [27:0] lshr_ln27_fu_2653_p4;
wire   [63:0] Egu_1_fu_2671_p2;
wire   [43:0] trunc_ln259_fu_2677_p1;
wire   [19:0] lshr_ln28_fu_2681_p4;
wire   [63:0] Eka_1_fu_2699_p2;
wire   [60:0] trunc_ln261_fu_2704_p1;
wire   [2:0] lshr_ln29_fu_2708_p4;
wire   [63:0] Eme_1_fu_2726_p2;
wire   [18:0] trunc_ln263_fu_2732_p1;
wire   [44:0] lshr_ln30_fu_2736_p4;
wire   [63:0] Esi_1_fu_2754_p2;
wire   [2:0] trunc_ln265_fu_2760_p1;
wire   [60:0] lshr_ln31_fu_2764_p4;
wire   [63:0] BCe_8_fu_2691_p3;
wire   [63:0] BCi_8_fu_2718_p3;
wire   [63:0] xor_ln266_fu_2782_p2;
wire   [63:0] and_ln266_fu_2788_p2;
wire   [63:0] BCa_8_fu_2663_p3;
wire   [63:0] BCo_8_fu_2746_p3;
wire   [63:0] xor_ln267_fu_2800_p2;
wire   [63:0] and_ln267_fu_2806_p2;
wire   [63:0] BCu_8_fu_2774_p3;
wire   [63:0] xor_ln268_fu_2818_p2;
wire   [63:0] and_ln268_fu_2824_p2;
wire   [63:0] xor_ln269_fu_2836_p2;
wire   [63:0] and_ln269_fu_2842_p2;
wire   [63:0] xor_ln270_fu_2854_p2;
wire   [63:0] and_ln270_fu_2860_p2;
wire   [63:0] Ebe_1_fu_2872_p2;
wire   [62:0] trunc_ln273_fu_2877_p1;
wire   [0:0] tmp_11_fu_2881_p3;
wire   [63:0] Egi_1_fu_2897_p2;
wire   [57:0] trunc_ln275_fu_2903_p1;
wire   [5:0] lshr_ln32_fu_2907_p4;
wire   [63:0] Eko_1_fu_2925_p2;
wire   [38:0] trunc_ln277_fu_2930_p1;
wire   [24:0] lshr_ln33_fu_2934_p4;
wire   [63:0] Emu_1_fu_2952_p2;
wire   [55:0] trunc_ln279_fu_2958_p1;
wire   [7:0] lshr_ln34_fu_2962_p4;
wire   [63:0] Esa_1_fu_2980_p2;
wire   [45:0] trunc_ln281_fu_2986_p1;
wire   [17:0] lshr_ln35_fu_2990_p4;
wire   [63:0] BCe_9_fu_2917_p3;
wire   [63:0] BCi_9_fu_2944_p3;
wire   [63:0] xor_ln282_fu_3008_p2;
wire   [63:0] BCa_9_fu_2889_p3;
wire   [63:0] and_ln282_fu_3014_p2;
wire   [63:0] BCo_9_fu_2972_p3;
wire   [63:0] xor_ln283_fu_3026_p2;
wire   [63:0] and_ln283_fu_3032_p2;
wire   [63:0] BCu_9_fu_3000_p3;
wire   [63:0] xor_ln284_fu_3044_p2;
wire   [63:0] and_ln284_fu_3050_p2;
wire   [63:0] xor_ln285_fu_3062_p2;
wire   [63:0] and_ln285_fu_3068_p2;
wire   [63:0] xor_ln286_fu_3080_p2;
wire   [63:0] and_ln286_fu_3086_p2;
wire   [63:0] Ebu_1_fu_3098_p2;
wire   [36:0] trunc_ln289_fu_3103_p1;
wire   [26:0] lshr_ln36_fu_3107_p4;
wire   [63:0] Ega_1_fu_3125_p2;
wire   [27:0] trunc_ln291_fu_3131_p1;
wire   [35:0] lshr_ln37_fu_3135_p4;
wire   [63:0] Eke_1_fu_3153_p2;
wire   [53:0] trunc_ln293_fu_3158_p1;
wire   [9:0] lshr_ln38_fu_3162_p4;
wire   [63:0] Emi_1_fu_3180_p2;
wire   [48:0] trunc_ln295_fu_3186_p1;
wire   [14:0] lshr_ln39_fu_3190_p4;
wire   [63:0] Eso_1_fu_3208_p2;
wire   [7:0] trunc_ln297_fu_3214_p1;
wire   [55:0] lshr_ln40_fu_3218_p4;
wire   [63:0] BCe_10_fu_3145_p3;
wire   [63:0] BCi_10_fu_3172_p3;
wire   [63:0] xor_ln298_fu_3236_p2;
wire   [63:0] BCa_10_fu_3117_p3;
wire   [63:0] and_ln298_fu_3242_p2;
wire   [63:0] BCo_10_fu_3200_p3;
wire   [63:0] xor_ln299_fu_3254_p2;
wire   [63:0] and_ln299_fu_3260_p2;
wire   [63:0] BCu_10_fu_3228_p3;
wire   [63:0] xor_ln300_fu_3272_p2;
wire   [63:0] and_ln300_fu_3278_p2;
wire   [63:0] xor_ln301_fu_3290_p2;
wire   [63:0] and_ln301_fu_3296_p2;
wire   [63:0] xor_ln302_fu_3308_p2;
wire   [63:0] and_ln302_fu_3314_p2;
wire   [63:0] Ebi_1_fu_3326_p2;
wire   [1:0] trunc_ln305_fu_3331_p1;
wire   [61:0] lshr_ln41_fu_3335_p4;
wire   [63:0] Ego_1_fu_3353_p2;
wire   [8:0] trunc_ln307_fu_3359_p1;
wire   [54:0] lshr_ln42_fu_3363_p4;
wire   [63:0] Eku_1_fu_3381_p2;
wire   [24:0] trunc_ln309_fu_3386_p1;
wire   [38:0] lshr_ln43_fu_3390_p4;
wire   [63:0] Ema_1_fu_3408_p2;
wire   [22:0] trunc_ln311_fu_3414_p1;
wire   [40:0] lshr_ln44_fu_3418_p4;
wire   [63:0] Ese_1_fu_3436_p2;
wire   [61:0] trunc_ln313_fu_3442_p1;
wire   [1:0] lshr_ln45_fu_3446_p4;
wire   [63:0] BCe_11_fu_3373_p3;
wire   [63:0] BCi_11_fu_3400_p3;
wire   [63:0] xor_ln314_fu_3464_p2;
wire   [63:0] and_ln314_fu_3470_p2;
wire   [63:0] BCa_11_fu_3345_p3;
wire   [63:0] BCo_11_fu_3428_p3;
wire   [63:0] xor_ln315_fu_3482_p2;
wire   [63:0] and_ln315_fu_3488_p2;
wire   [63:0] BCu_11_fu_3456_p3;
wire   [63:0] xor_ln316_fu_3500_p2;
wire   [63:0] and_ln316_fu_3506_p2;
wire   [63:0] xor_ln317_fu_3518_p2;
wire   [63:0] and_ln317_fu_3524_p2;
wire   [63:0] xor_ln318_fu_3536_p2;
wire   [63:0] and_ln318_fu_3542_p2;
reg   [28:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
end

expand_mat_KeccakF1600_StatePermute_KeccakF_RoundConstants_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakF_RoundConstants_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakF_RoundConstants_address0),
    .ce0(KeccakF_RoundConstants_ce0),
    .q0(KeccakF_RoundConstants_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Aba_1_fu_308 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aba_1_fu_308 <= Aba_3_fu_2566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Abe_1_fu_304 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Abe_1_fu_304 <= Abe_3_fu_2584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Abi_1_fu_300 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Abi_1_fu_300 <= Abi_3_fu_2602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Abo_1_fu_296 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Abo_1_fu_296 <= Abo_3_fu_2620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Abu_1_fu_292 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Abu_1_fu_292 <= Abu_3_fu_2638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Aga_1_fu_288 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aga_1_fu_288 <= Aga_3_fu_2794_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Age_1_fu_284 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Age_1_fu_284 <= Age_3_fu_2812_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Agi_1_fu_280 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Agi_1_fu_280 <= Agi_3_fu_2830_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Ago_1_fu_276 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ago_1_fu_276 <= Ago_3_fu_2848_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Agu_1_fu_272 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Agu_1_fu_272 <= Agu_3_fu_2866_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Aka_1_fu_268 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aka_1_fu_268 <= Aka_3_fu_3020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Ake_1_fu_264 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ake_1_fu_264 <= Ake_3_fu_3038_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Aki_1_fu_260 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aki_1_fu_260 <= Aki_3_fu_3056_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Ako_1_fu_256 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ako_1_fu_256 <= Ako_3_fu_3074_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Aku_1_fu_252 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aku_1_fu_252 <= Aku_3_fu_3092_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Ama_1_fu_248 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ama_1_fu_248 <= Ama_3_fu_3248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Ame_1_fu_244 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ame_1_fu_244 <= Ame_3_fu_3266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Ami_1_fu_240 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ami_1_fu_240 <= Ami_3_fu_3284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Amo_1_fu_236 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Amo_1_fu_236 <= Amo_3_fu_3302_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Amu_1_fu_232 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Amu_1_fu_232 <= Amu_3_fu_3320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Asa_1_fu_228 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Asa_1_fu_228 <= Asa_3_fu_3476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Ase_1_fu_224 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Ase_1_fu_224 <= Ase_3_fu_3494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Asi_1_fu_220 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Asi_1_fu_220 <= Asi_3_fu_3512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Aso_1_fu_216 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Aso_1_fu_216 <= Aso_3_fu_3530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Asu_1_fu_312 <= state_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Asu_1_fu_312 <= Asu_3_fu_3548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        round_fu_316 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln128_fu_813_p2 == 1'd1))) begin
        round_fu_316 <= add_ln128_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        Eba_reg_4020 <= Eba_fu_1216_p2;
        Ebe_reg_4026 <= Ebe_fu_1234_p2;
        Ebi_reg_4032 <= Ebi_fu_1252_p2;
        Ebo_reg_4038 <= Ebo_fu_1270_p2;
        Ebu_reg_4044 <= Ebu_fu_1288_p2;
        Eka_reg_4100 <= Eka_fu_1544_p2;
        Eke_reg_4106 <= Eke_fu_1562_p2;
        Eki_reg_4112 <= Eki_fu_1580_p2;
        Eko_reg_4118 <= Eko_fu_1598_p2;
        Eku_reg_4124 <= Eku_fu_1616_p2;
        lshr_ln13_reg_4135 <= {{Abu_2_fu_1622_p2[63:37]}};
        lshr_ln14_reg_4145 <= {{Aga_2_fu_1642_p2[63:28]}};
        lshr_ln15_reg_4155 <= {{Ake_2_fu_1662_p2[63:54]}};
        lshr_ln16_reg_4165 <= {{Ami_2_fu_1682_p2[63:49]}};
        lshr_ln17_reg_4175 <= {{Aso_2_fu_1702_p2[63:8]}};
        lshr_ln18_reg_4185 <= {{Abi_2_fu_1722_p2[63:2]}};
        lshr_ln19_reg_4195 <= {{Ago_2_fu_1742_p2[63:9]}};
        lshr_ln1_reg_4075 <= {{Aka_2_fu_1334_p2[63:61]}};
        lshr_ln20_reg_4205 <= {{Aku_2_fu_1762_p2[63:25]}};
        lshr_ln21_reg_4215 <= {{Ama_2_fu_1782_p2[63:23]}};
        lshr_ln22_reg_4225 <= {{Ase_2_fu_1802_p2[63:62]}};
        lshr_ln2_reg_4085 <= {{Ame_2_fu_1354_p2[63:19]}};
        lshr_ln3_reg_4095 <= {{Asi_2_fu_1374_p2[63:3]}};
        lshr_ln9_reg_4055 <= {{Abo_2_fu_1294_p2[63:36]}};
        lshr_ln_reg_4065 <= {{Agu_2_fu_1314_p2[63:44]}};
        trunc_ln162_reg_4050 <= trunc_ln162_fu_1300_p1;
        trunc_ln164_reg_4060 <= trunc_ln164_fu_1320_p1;
        trunc_ln166_reg_4070 <= trunc_ln166_fu_1340_p1;
        trunc_ln168_reg_4080 <= trunc_ln168_fu_1360_p1;
        trunc_ln170_reg_4090 <= trunc_ln170_fu_1380_p1;
        trunc_ln194_reg_4130 <= trunc_ln194_fu_1628_p1;
        trunc_ln196_reg_4140 <= trunc_ln196_fu_1648_p1;
        trunc_ln198_reg_4150 <= trunc_ln198_fu_1668_p1;
        trunc_ln200_reg_4160 <= trunc_ln200_fu_1688_p1;
        trunc_ln202_reg_4170 <= trunc_ln202_fu_1708_p1;
        trunc_ln210_reg_4180 <= trunc_ln210_fu_1728_p1;
        trunc_ln212_reg_4190 <= trunc_ln212_fu_1748_p1;
        trunc_ln214_reg_4200 <= trunc_ln214_fu_1768_p1;
        trunc_ln216_reg_4210 <= trunc_ln216_fu_1788_p1;
        trunc_ln218_reg_4220 <= trunc_ln218_fu_1808_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        round_1_reg_4007 <= round_fu_316;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        KeccakF_RoundConstants_address0 = zext_ln250_fu_1827_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        KeccakF_RoundConstants_address0 = zext_ln128_fu_808_p1;
    end else begin
        KeccakF_RoundConstants_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        KeccakF_RoundConstants_ce0 = 1'b1;
    end else begin
        KeccakF_RoundConstants_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        state_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_address0 = state_addr_2_reg_3871;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_address0 = state_addr_reg_3861;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        state_address0 = 64'd0;
    end else begin
        state_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        state_address1 = state_addr_24_reg_4002;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        state_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_address1 = state_addr_1_reg_3866;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_address1 = 64'd1;
    end else begin
        state_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        state_ce0 = 1'b1;
    end else begin
        state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        state_ce1 = 1'b1;
    end else begin
        state_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        state_d0 = Asi_1_fu_220;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_d0 = Asa_1_fu_228;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_d0 = Amo_1_fu_236;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_d0 = Ame_1_fu_244;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_d0 = Aku_1_fu_252;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_d0 = Aki_1_fu_260;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_d0 = Aka_1_fu_268;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_d0 = Ago_1_fu_276;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_d0 = Age_1_fu_284;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_d0 = Abu_1_fu_292;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_d0 = Abi_1_fu_300;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_d0 = Aba_1_fu_308;
    end else begin
        state_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        state_d1 = Asu_1_fu_312;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        state_d1 = Aso_1_fu_216;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        state_d1 = Ase_1_fu_224;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        state_d1 = Amu_1_fu_232;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        state_d1 = Ami_1_fu_240;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        state_d1 = Ama_1_fu_248;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        state_d1 = Ako_1_fu_256;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        state_d1 = Ake_1_fu_264;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        state_d1 = Agu_1_fu_272;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        state_d1 = Agi_1_fu_280;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        state_d1 = Aga_1_fu_288;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_d1 = Abo_1_fu_296;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_d1 = Abe_1_fu_304;
    end else begin
        state_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln128_fu_813_p2 == 1'd0)))) begin
        state_we0 = 1'b1;
    end else begin
        state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln128_fu_813_p2 == 1'd0)))) begin
        state_we1 = 1'b1;
    end else begin
        state_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln128_fu_813_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_3_fu_2566_p2 = (xor_ln250_fu_2560_p2 ^ KeccakF_RoundConstants_q0);

assign Aba_4_fu_1080_p2 = (Da_fu_970_p2 ^ Aba_1_fu_308);

assign Abe_2_fu_1394_p2 = (De_fu_996_p2 ^ Abe_1_fu_304);

assign Abe_3_fu_2584_p2 = (and_ln251_fu_2578_p2 ^ BCe_7_fu_2457_p3);

assign Abi_2_fu_1722_p2 = (Di_fu_1022_p2 ^ Abi_1_fu_300);

assign Abi_3_fu_2602_p2 = (and_ln252_fu_2596_p2 ^ BCi_7_fu_2484_p3);

assign Abo_2_fu_1294_p2 = (Do_fu_1048_p2 ^ Abo_1_fu_296);

assign Abo_3_fu_2620_p2 = (and_ln253_fu_2614_p2 ^ BCo_7_fu_2512_p3);

assign Abu_2_fu_1622_p2 = (Du_fu_1074_p2 ^ Abu_1_fu_292);

assign Abu_3_fu_2638_p2 = (and_ln254_fu_2632_p2 ^ BCu_7_fu_2540_p3);

assign Aga_2_fu_1642_p2 = (Da_fu_970_p2 ^ Aga_1_fu_288);

assign Aga_3_fu_2794_p2 = (and_ln266_fu_2788_p2 ^ BCa_8_fu_2663_p3);

assign Age_2_fu_1086_p2 = (De_fu_996_p2 ^ Age_1_fu_284);

assign Age_3_fu_2812_p2 = (and_ln267_fu_2806_p2 ^ BCe_8_fu_2691_p3);

assign Agi_2_fu_1420_p2 = (Di_fu_1022_p2 ^ Agi_1_fu_280);

assign Agi_3_fu_2830_p2 = (and_ln268_fu_2824_p2 ^ BCi_8_fu_2718_p3);

assign Ago_2_fu_1742_p2 = (Do_fu_1048_p2 ^ Ago_1_fu_276);

assign Ago_3_fu_2848_p2 = (and_ln269_fu_2842_p2 ^ BCo_8_fu_2746_p3);

assign Agu_2_fu_1314_p2 = (Du_fu_1074_p2 ^ Agu_1_fu_272);

assign Agu_3_fu_2866_p2 = (and_ln270_fu_2860_p2 ^ BCu_8_fu_2774_p3);

assign Aka_2_fu_1334_p2 = (Da_fu_970_p2 ^ Aka_1_fu_268);

assign Aka_3_fu_3020_p2 = (and_ln282_fu_3014_p2 ^ BCa_9_fu_2889_p3);

assign Ake_2_fu_1662_p2 = (De_fu_996_p2 ^ Ake_1_fu_264);

assign Ake_3_fu_3038_p2 = (and_ln283_fu_3032_p2 ^ BCe_9_fu_2917_p3);

assign Aki_2_fu_1114_p2 = (Di_fu_1022_p2 ^ Aki_1_fu_260);

assign Aki_3_fu_3056_p2 = (and_ln284_fu_3050_p2 ^ BCi_9_fu_2944_p3);

assign Ako_2_fu_1448_p2 = (Do_fu_1048_p2 ^ Ako_1_fu_256);

assign Ako_3_fu_3074_p2 = (and_ln285_fu_3068_p2 ^ BCo_9_fu_2972_p3);

assign Aku_2_fu_1762_p2 = (Du_fu_1074_p2 ^ Aku_1_fu_252);

assign Aku_3_fu_3092_p2 = (and_ln286_fu_3086_p2 ^ BCu_9_fu_3000_p3);

assign Ama_2_fu_1782_p2 = (Da_fu_970_p2 ^ Ama_1_fu_248);

assign Ama_3_fu_3248_p2 = (and_ln298_fu_3242_p2 ^ BCa_10_fu_3117_p3);

assign Ame_2_fu_1354_p2 = (De_fu_996_p2 ^ Ame_1_fu_244);

assign Ame_3_fu_3266_p2 = (and_ln299_fu_3260_p2 ^ BCe_10_fu_3145_p3);

assign Ami_2_fu_1682_p2 = (Di_fu_1022_p2 ^ Ami_1_fu_240);

assign Ami_3_fu_3284_p2 = (and_ln300_fu_3278_p2 ^ BCi_10_fu_3172_p3);

assign Amo_2_fu_1142_p2 = (Do_fu_1048_p2 ^ Amo_1_fu_236);

assign Amo_3_fu_3302_p2 = (and_ln301_fu_3296_p2 ^ BCo_10_fu_3200_p3);

assign Amu_2_fu_1476_p2 = (Du_fu_1074_p2 ^ Amu_1_fu_232);

assign Amu_3_fu_3320_p2 = (and_ln302_fu_3314_p2 ^ BCu_10_fu_3228_p3);

assign Asa_2_fu_1504_p2 = (Da_fu_970_p2 ^ Asa_1_fu_228);

assign Asa_3_fu_3476_p2 = (and_ln314_fu_3470_p2 ^ BCa_11_fu_3345_p3);

assign Ase_2_fu_1802_p2 = (De_fu_996_p2 ^ Ase_1_fu_224);

assign Ase_3_fu_3494_p2 = (and_ln315_fu_3488_p2 ^ BCe_11_fu_3373_p3);

assign Asi_2_fu_1374_p2 = (Di_fu_1022_p2 ^ Asi_1_fu_220);

assign Asi_3_fu_3512_p2 = (and_ln316_fu_3506_p2 ^ BCi_11_fu_3400_p3);

assign Aso_2_fu_1702_p2 = (Do_fu_1048_p2 ^ Aso_1_fu_216);

assign Aso_3_fu_3530_p2 = (and_ln317_fu_3524_p2 ^ BCo_11_fu_3428_p3);

assign Asu_2_fu_1170_p2 = (Du_fu_1074_p2 ^ Asu_1_fu_312);

assign Asu_3_fu_3548_p2 = (and_ln318_fu_3542_p2 ^ BCu_11_fu_3456_p3);

assign BCa_10_fu_3117_p3 = {{trunc_ln289_fu_3103_p1}, {lshr_ln36_fu_3107_p4}};

assign BCa_11_fu_3345_p3 = {{trunc_ln305_fu_3331_p1}, {lshr_ln41_fu_3335_p4}};

assign BCa_2_fu_1832_p3 = {{trunc_ln162_reg_4050}, {lshr_ln9_reg_4055}};

assign BCa_3_fu_1412_p3 = {{trunc_ln178_fu_1400_p1}, {tmp_5_fu_1404_p3}};

assign BCa_4_fu_1952_p3 = {{trunc_ln194_reg_4130}, {lshr_ln13_reg_4135}};

assign BCa_5_fu_2072_p3 = {{trunc_ln210_reg_4180}, {lshr_ln18_reg_4185}};

assign BCa_6_fu_2208_p2 = (xor_ln226_fu_2192_p2 ^ xor_ln226_2_fu_2202_p2);

assign BCa_8_fu_2663_p3 = {{trunc_ln257_fu_2649_p1}, {lshr_ln27_fu_2653_p4}};

assign BCa_9_fu_2889_p3 = {{trunc_ln273_fu_2877_p1}, {tmp_11_fu_2881_p3}};

assign BCa_fu_848_p2 = (xor_ln131_fu_830_p2 ^ xor_ln131_2_fu_842_p2);

assign BCe_10_fu_3145_p3 = {{trunc_ln291_fu_3131_p1}, {lshr_ln37_fu_3135_p4}};

assign BCe_11_fu_3373_p3 = {{trunc_ln307_fu_3359_p1}, {lshr_ln42_fu_3363_p4}};

assign BCe_1_fu_1106_p3 = {{trunc_ln147_fu_1092_p1}, {lshr_ln5_fu_1096_p4}};

assign BCe_2_fu_1838_p3 = {{trunc_ln164_reg_4060}, {lshr_ln_reg_4065}};

assign BCe_3_fu_1440_p3 = {{trunc_ln180_fu_1426_p1}, {lshr_ln4_fu_1430_p4}};

assign BCe_4_fu_1958_p3 = {{trunc_ln196_reg_4140}, {lshr_ln14_reg_4145}};

assign BCe_5_fu_2078_p3 = {{trunc_ln212_reg_4190}, {lshr_ln19_reg_4195}};

assign BCe_6_fu_2230_p2 = (xor_ln227_fu_2214_p2 ^ xor_ln227_2_fu_2224_p2);

assign BCe_7_fu_2457_p3 = {{trunc_ln242_fu_2443_p1}, {lshr_ln23_fu_2447_p4}};

assign BCe_8_fu_2691_p3 = {{trunc_ln259_fu_2677_p1}, {lshr_ln28_fu_2681_p4}};

assign BCe_9_fu_2917_p3 = {{trunc_ln275_fu_2903_p1}, {lshr_ln32_fu_2907_p4}};

assign BCe_fu_872_p2 = (xor_ln132_fu_854_p2 ^ xor_ln132_2_fu_866_p2);

assign BCi_10_fu_3172_p3 = {{trunc_ln293_fu_3158_p1}, {lshr_ln38_fu_3162_p4}};

assign BCi_11_fu_3400_p3 = {{trunc_ln309_fu_3386_p1}, {lshr_ln43_fu_3390_p4}};

assign BCi_1_fu_1134_p3 = {{trunc_ln149_fu_1120_p1}, {lshr_ln6_fu_1124_p4}};

assign BCi_2_fu_1844_p3 = {{trunc_ln166_reg_4070}, {lshr_ln1_reg_4075}};

assign BCi_3_fu_1468_p3 = {{trunc_ln182_fu_1454_p1}, {lshr_ln10_fu_1458_p4}};

assign BCi_4_fu_1964_p3 = {{trunc_ln198_reg_4150}, {lshr_ln15_reg_4155}};

assign BCi_5_fu_2084_p3 = {{trunc_ln214_reg_4200}, {lshr_ln20_reg_4205}};

assign BCi_6_fu_2252_p2 = (xor_ln228_fu_2236_p2 ^ xor_ln228_2_fu_2247_p2);

assign BCi_7_fu_2484_p3 = {{trunc_ln244_fu_2470_p1}, {lshr_ln24_fu_2474_p4}};

assign BCi_8_fu_2718_p3 = {{trunc_ln261_fu_2704_p1}, {lshr_ln29_fu_2708_p4}};

assign BCi_9_fu_2944_p3 = {{trunc_ln277_fu_2930_p1}, {lshr_ln33_fu_2934_p4}};

assign BCi_fu_896_p2 = (xor_ln133_fu_878_p2 ^ xor_ln133_2_fu_890_p2);

assign BCo_10_fu_3200_p3 = {{trunc_ln295_fu_3186_p1}, {lshr_ln39_fu_3190_p4}};

assign BCo_11_fu_3428_p3 = {{trunc_ln311_fu_3414_p1}, {lshr_ln44_fu_3418_p4}};

assign BCo_1_fu_1162_p3 = {{trunc_ln151_fu_1148_p1}, {lshr_ln7_fu_1152_p4}};

assign BCo_2_fu_1850_p3 = {{trunc_ln168_reg_4080}, {lshr_ln2_reg_4085}};

assign BCo_3_fu_1496_p3 = {{trunc_ln184_fu_1482_p1}, {lshr_ln11_fu_1486_p4}};

assign BCo_4_fu_1970_p3 = {{trunc_ln200_reg_4160}, {lshr_ln16_reg_4165}};

assign BCo_5_fu_2090_p3 = {{trunc_ln216_reg_4210}, {lshr_ln21_reg_4215}};

assign BCo_6_fu_2274_p2 = (xor_ln229_fu_2258_p2 ^ xor_ln229_2_fu_2269_p2);

assign BCo_7_fu_2512_p3 = {{trunc_ln246_fu_2498_p1}, {lshr_ln25_fu_2502_p4}};

assign BCo_8_fu_2746_p3 = {{trunc_ln263_fu_2732_p1}, {lshr_ln30_fu_2736_p4}};

assign BCo_9_fu_2972_p3 = {{trunc_ln279_fu_2958_p1}, {lshr_ln34_fu_2962_p4}};

assign BCo_fu_920_p2 = (xor_ln134_fu_902_p2 ^ xor_ln134_2_fu_914_p2);

assign BCu_10_fu_3228_p3 = {{trunc_ln297_fu_3214_p1}, {lshr_ln40_fu_3218_p4}};

assign BCu_11_fu_3456_p3 = {{trunc_ln313_fu_3442_p1}, {lshr_ln45_fu_3446_p4}};

assign BCu_1_fu_1190_p3 = {{trunc_ln153_fu_1176_p1}, {lshr_ln8_fu_1180_p4}};

assign BCu_2_fu_1856_p3 = {{trunc_ln170_reg_4090}, {lshr_ln3_reg_4095}};

assign BCu_3_fu_1524_p3 = {{trunc_ln186_fu_1510_p1}, {lshr_ln12_fu_1514_p4}};

assign BCu_4_fu_1976_p3 = {{trunc_ln202_reg_4170}, {lshr_ln17_reg_4175}};

assign BCu_5_fu_2096_p3 = {{trunc_ln218_reg_4220}, {lshr_ln22_reg_4225}};

assign BCu_6_fu_2296_p2 = (xor_ln230_fu_2280_p2 ^ xor_ln230_2_fu_2290_p2);

assign BCu_7_fu_2540_p3 = {{trunc_ln248_fu_2526_p1}, {lshr_ln26_fu_2530_p4}};

assign BCu_8_fu_2774_p3 = {{trunc_ln265_fu_2760_p1}, {lshr_ln31_fu_2764_p4}};

assign BCu_9_fu_3000_p3 = {{trunc_ln281_fu_2986_p1}, {lshr_ln35_fu_2990_p4}};

assign BCu_fu_944_p2 = (xor_ln135_fu_926_p2 ^ xor_ln135_2_fu_938_p2);

assign Da_1_fu_2322_p2 = (or_ln5_fu_2314_p3 ^ BCu_6_fu_2296_p2);

assign Da_fu_970_p2 = (or_ln_fu_962_p3 ^ BCu_fu_944_p2);

assign De_1_fu_2348_p2 = (or_ln6_fu_2340_p3 ^ BCa_6_fu_2208_p2);

assign De_fu_996_p2 = (or_ln1_fu_988_p3 ^ BCa_fu_848_p2);

assign Di_1_fu_2374_p2 = (or_ln7_fu_2366_p3 ^ BCe_6_fu_2230_p2);

assign Di_fu_1022_p2 = (or_ln2_fu_1014_p3 ^ BCe_fu_872_p2);

assign Do_1_fu_2400_p2 = (or_ln8_fu_2392_p3 ^ BCi_6_fu_2252_p2);

assign Do_fu_1048_p2 = (or_ln3_fu_1040_p3 ^ BCi_fu_896_p2);

assign Du_1_fu_2426_p2 = (or_ln9_fu_2418_p3 ^ BCo_6_fu_2274_p2);

assign Du_fu_1074_p2 = (or_ln4_fu_1066_p3 ^ BCo_fu_920_p2);

assign Eba_2_fu_2432_p2 = (Eba_reg_4020 ^ Da_1_fu_2322_p2);

assign Eba_fu_1216_p2 = (xor_ln155_fu_1210_p2 ^ KeccakF_RoundConstants_q0);

assign Ebe_1_fu_2872_p2 = (Ebe_reg_4026 ^ De_1_fu_2348_p2);

assign Ebe_fu_1234_p2 = (and_ln156_fu_1228_p2 ^ BCe_1_fu_1106_p3);

assign Ebi_1_fu_3326_p2 = (Ebi_reg_4032 ^ Di_1_fu_2374_p2);

assign Ebi_fu_1252_p2 = (and_ln157_fu_1246_p2 ^ BCi_1_fu_1134_p3);

assign Ebo_1_fu_2644_p2 = (Ebo_reg_4038 ^ Do_1_fu_2400_p2);

assign Ebo_fu_1270_p2 = (and_ln158_fu_1264_p2 ^ BCo_1_fu_1162_p3);

assign Ebu_1_fu_3098_p2 = (Ebu_reg_4044 ^ Du_1_fu_2426_p2);

assign Ebu_fu_1288_p2 = (and_ln159_fu_1282_p2 ^ BCu_1_fu_1190_p3);

assign Ega_1_fu_3125_p2 = (Ega_fu_1874_p2 ^ Da_1_fu_2322_p2);

assign Ega_fu_1874_p2 = (and_ln171_fu_1868_p2 ^ BCa_2_fu_1832_p3);

assign Ege_1_fu_2437_p2 = (Ege_fu_1892_p2 ^ De_1_fu_2348_p2);

assign Ege_fu_1892_p2 = (and_ln172_fu_1886_p2 ^ BCe_2_fu_1838_p3);

assign Egi_1_fu_2897_p2 = (Egi_fu_1910_p2 ^ Di_1_fu_2374_p2);

assign Egi_fu_1910_p2 = (and_ln173_fu_1904_p2 ^ BCi_2_fu_1844_p3);

assign Ego_1_fu_3353_p2 = (Ego_fu_1928_p2 ^ Do_1_fu_2400_p2);

assign Ego_fu_1928_p2 = (and_ln174_fu_1922_p2 ^ BCo_2_fu_1850_p3);

assign Egu_1_fu_2671_p2 = (Egu_fu_1946_p2 ^ Du_1_fu_2426_p2);

assign Egu_fu_1946_p2 = (and_ln175_fu_1940_p2 ^ BCu_2_fu_1856_p3);

assign Eka_1_fu_2699_p2 = (Eka_reg_4100 ^ Da_1_fu_2322_p2);

assign Eka_fu_1544_p2 = (and_ln187_fu_1538_p2 ^ BCa_3_fu_1412_p3);

assign Eke_1_fu_3153_p2 = (Eke_reg_4106 ^ De_1_fu_2348_p2);

assign Eke_fu_1562_p2 = (and_ln188_fu_1556_p2 ^ BCe_3_fu_1440_p3);

assign Eki_1_fu_2465_p2 = (Eki_reg_4112 ^ Di_1_fu_2374_p2);

assign Eki_fu_1580_p2 = (and_ln189_fu_1574_p2 ^ BCi_3_fu_1468_p3);

assign Eko_1_fu_2925_p2 = (Eko_reg_4118 ^ Do_1_fu_2400_p2);

assign Eko_fu_1598_p2 = (and_ln190_fu_1592_p2 ^ BCo_3_fu_1496_p3);

assign Eku_1_fu_3381_p2 = (Eku_reg_4124 ^ Du_1_fu_2426_p2);

assign Eku_fu_1616_p2 = (and_ln191_fu_1610_p2 ^ BCu_3_fu_1524_p3);

assign Ema_1_fu_3408_p2 = (Ema_fu_1994_p2 ^ Da_1_fu_2322_p2);

assign Ema_fu_1994_p2 = (and_ln203_fu_1988_p2 ^ BCa_4_fu_1952_p3);

assign Eme_1_fu_2726_p2 = (Eme_fu_2012_p2 ^ De_1_fu_2348_p2);

assign Eme_fu_2012_p2 = (and_ln204_fu_2006_p2 ^ BCe_4_fu_1958_p3);

assign Emi_1_fu_3180_p2 = (Emi_fu_2030_p2 ^ Di_1_fu_2374_p2);

assign Emi_fu_2030_p2 = (and_ln205_fu_2024_p2 ^ BCi_4_fu_1964_p3);

assign Emo_1_fu_2492_p2 = (Emo_fu_2048_p2 ^ Do_1_fu_2400_p2);

assign Emo_fu_2048_p2 = (and_ln206_fu_2042_p2 ^ BCo_4_fu_1970_p3);

assign Emu_1_fu_2952_p2 = (Emu_fu_2066_p2 ^ Du_1_fu_2426_p2);

assign Emu_fu_2066_p2 = (and_ln207_fu_2060_p2 ^ BCu_4_fu_1976_p3);

assign Esa_1_fu_2980_p2 = (Esa_fu_2114_p2 ^ Da_1_fu_2322_p2);

assign Esa_fu_2114_p2 = (and_ln219_fu_2108_p2 ^ BCa_5_fu_2072_p3);

assign Ese_1_fu_3436_p2 = (Ese_fu_2132_p2 ^ De_1_fu_2348_p2);

assign Ese_fu_2132_p2 = (and_ln220_fu_2126_p2 ^ BCe_5_fu_2078_p3);

assign Esi_1_fu_2754_p2 = (Esi_fu_2150_p2 ^ Di_1_fu_2374_p2);

assign Esi_fu_2150_p2 = (and_ln221_fu_2144_p2 ^ BCi_5_fu_2084_p3);

assign Eso_1_fu_3208_p2 = (Eso_fu_2168_p2 ^ Do_1_fu_2400_p2);

assign Eso_fu_2168_p2 = (and_ln222_fu_2162_p2 ^ BCo_5_fu_2090_p3);

assign Esu_1_fu_2520_p2 = (Esu_fu_2186_p2 ^ Du_1_fu_2426_p2);

assign Esu_fu_2186_p2 = (and_ln223_fu_2180_p2 ^ BCu_5_fu_2096_p3);

assign add_ln128_fu_819_p2 = (round_fu_316 + 5'd2);

assign and_ln154_fu_1204_p2 = (xor_ln154_fu_1198_p2 & BCi_1_fu_1134_p3);

assign and_ln156_fu_1228_p2 = (xor_ln156_fu_1222_p2 & BCo_1_fu_1162_p3);

assign and_ln157_fu_1246_p2 = (xor_ln157_fu_1240_p2 & BCu_1_fu_1190_p3);

assign and_ln158_fu_1264_p2 = (xor_ln158_fu_1258_p2 & Aba_4_fu_1080_p2);

assign and_ln159_fu_1282_p2 = (xor_ln159_fu_1276_p2 & BCe_1_fu_1106_p3);

assign and_ln171_fu_1868_p2 = (xor_ln171_fu_1862_p2 & BCi_2_fu_1844_p3);

assign and_ln172_fu_1886_p2 = (xor_ln172_fu_1880_p2 & BCo_2_fu_1850_p3);

assign and_ln173_fu_1904_p2 = (xor_ln173_fu_1898_p2 & BCu_2_fu_1856_p3);

assign and_ln174_fu_1922_p2 = (xor_ln174_fu_1916_p2 & BCa_2_fu_1832_p3);

assign and_ln175_fu_1940_p2 = (xor_ln175_fu_1934_p2 & BCe_2_fu_1838_p3);

assign and_ln187_fu_1538_p2 = (xor_ln187_fu_1532_p2 & BCi_3_fu_1468_p3);

assign and_ln188_fu_1556_p2 = (xor_ln188_fu_1550_p2 & BCo_3_fu_1496_p3);

assign and_ln189_fu_1574_p2 = (xor_ln189_fu_1568_p2 & BCu_3_fu_1524_p3);

assign and_ln190_fu_1592_p2 = (xor_ln190_fu_1586_p2 & BCa_3_fu_1412_p3);

assign and_ln191_fu_1610_p2 = (xor_ln191_fu_1604_p2 & BCe_3_fu_1440_p3);

assign and_ln203_fu_1988_p2 = (xor_ln203_fu_1982_p2 & BCi_4_fu_1964_p3);

assign and_ln204_fu_2006_p2 = (xor_ln204_fu_2000_p2 & BCo_4_fu_1970_p3);

assign and_ln205_fu_2024_p2 = (xor_ln205_fu_2018_p2 & BCu_4_fu_1976_p3);

assign and_ln206_fu_2042_p2 = (xor_ln206_fu_2036_p2 & BCa_4_fu_1952_p3);

assign and_ln207_fu_2060_p2 = (xor_ln207_fu_2054_p2 & BCe_4_fu_1958_p3);

assign and_ln219_fu_2108_p2 = (xor_ln219_fu_2102_p2 & BCi_5_fu_2084_p3);

assign and_ln220_fu_2126_p2 = (xor_ln220_fu_2120_p2 & BCo_5_fu_2090_p3);

assign and_ln221_fu_2144_p2 = (xor_ln221_fu_2138_p2 & BCu_5_fu_2096_p3);

assign and_ln222_fu_2162_p2 = (xor_ln222_fu_2156_p2 & BCa_5_fu_2072_p3);

assign and_ln223_fu_2180_p2 = (xor_ln223_fu_2174_p2 & BCe_5_fu_2078_p3);

assign and_ln249_fu_2554_p2 = (xor_ln249_fu_2548_p2 & BCi_7_fu_2484_p3);

assign and_ln251_fu_2578_p2 = (xor_ln251_fu_2572_p2 & BCo_7_fu_2512_p3);

assign and_ln252_fu_2596_p2 = (xor_ln252_fu_2590_p2 & BCu_7_fu_2540_p3);

assign and_ln253_fu_2614_p2 = (xor_ln253_fu_2608_p2 & Eba_2_fu_2432_p2);

assign and_ln254_fu_2632_p2 = (xor_ln254_fu_2626_p2 & BCe_7_fu_2457_p3);

assign and_ln266_fu_2788_p2 = (xor_ln266_fu_2782_p2 & BCi_8_fu_2718_p3);

assign and_ln267_fu_2806_p2 = (xor_ln267_fu_2800_p2 & BCo_8_fu_2746_p3);

assign and_ln268_fu_2824_p2 = (xor_ln268_fu_2818_p2 & BCu_8_fu_2774_p3);

assign and_ln269_fu_2842_p2 = (xor_ln269_fu_2836_p2 & BCa_8_fu_2663_p3);

assign and_ln270_fu_2860_p2 = (xor_ln270_fu_2854_p2 & BCe_8_fu_2691_p3);

assign and_ln282_fu_3014_p2 = (xor_ln282_fu_3008_p2 & BCi_9_fu_2944_p3);

assign and_ln283_fu_3032_p2 = (xor_ln283_fu_3026_p2 & BCo_9_fu_2972_p3);

assign and_ln284_fu_3050_p2 = (xor_ln284_fu_3044_p2 & BCu_9_fu_3000_p3);

assign and_ln285_fu_3068_p2 = (xor_ln285_fu_3062_p2 & BCa_9_fu_2889_p3);

assign and_ln286_fu_3086_p2 = (xor_ln286_fu_3080_p2 & BCe_9_fu_2917_p3);

assign and_ln298_fu_3242_p2 = (xor_ln298_fu_3236_p2 & BCi_10_fu_3172_p3);

assign and_ln299_fu_3260_p2 = (xor_ln299_fu_3254_p2 & BCo_10_fu_3200_p3);

assign and_ln300_fu_3278_p2 = (xor_ln300_fu_3272_p2 & BCu_10_fu_3228_p3);

assign and_ln301_fu_3296_p2 = (xor_ln301_fu_3290_p2 & BCa_10_fu_3117_p3);

assign and_ln302_fu_3314_p2 = (xor_ln302_fu_3308_p2 & BCe_10_fu_3145_p3);

assign and_ln314_fu_3470_p2 = (xor_ln314_fu_3464_p2 & BCi_11_fu_3400_p3);

assign and_ln315_fu_3488_p2 = (xor_ln315_fu_3482_p2 & BCo_11_fu_3428_p3);

assign and_ln316_fu_3506_p2 = (xor_ln316_fu_3500_p2 & BCu_11_fu_3456_p3);

assign and_ln317_fu_3524_p2 = (xor_ln317_fu_3518_p2 & BCa_11_fu_3345_p3);

assign and_ln318_fu_3542_p2 = (xor_ln318_fu_3536_p2 & BCe_11_fu_3373_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign icmp_ln128_fu_813_p2 = ((round_fu_316 < 5'd24) ? 1'b1 : 1'b0);

assign lshr_ln10_fu_1458_p4 = {{Ako_2_fu_1448_p2[63:39]}};

assign lshr_ln11_fu_1486_p4 = {{Amu_2_fu_1476_p2[63:56]}};

assign lshr_ln12_fu_1514_p4 = {{Asa_2_fu_1504_p2[63:46]}};

assign lshr_ln23_fu_2447_p4 = {{Ege_1_fu_2437_p2[63:20]}};

assign lshr_ln24_fu_2474_p4 = {{Eki_1_fu_2465_p2[63:21]}};

assign lshr_ln25_fu_2502_p4 = {{Emo_1_fu_2492_p2[63:43]}};

assign lshr_ln26_fu_2530_p4 = {{Esu_1_fu_2520_p2[63:50]}};

assign lshr_ln27_fu_2653_p4 = {{Ebo_1_fu_2644_p2[63:36]}};

assign lshr_ln28_fu_2681_p4 = {{Egu_1_fu_2671_p2[63:44]}};

assign lshr_ln29_fu_2708_p4 = {{Eka_1_fu_2699_p2[63:61]}};

assign lshr_ln30_fu_2736_p4 = {{Eme_1_fu_2726_p2[63:19]}};

assign lshr_ln31_fu_2764_p4 = {{Esi_1_fu_2754_p2[63:3]}};

assign lshr_ln32_fu_2907_p4 = {{Egi_1_fu_2897_p2[63:58]}};

assign lshr_ln33_fu_2934_p4 = {{Eko_1_fu_2925_p2[63:39]}};

assign lshr_ln34_fu_2962_p4 = {{Emu_1_fu_2952_p2[63:56]}};

assign lshr_ln35_fu_2990_p4 = {{Esa_1_fu_2980_p2[63:46]}};

assign lshr_ln36_fu_3107_p4 = {{Ebu_1_fu_3098_p2[63:37]}};

assign lshr_ln37_fu_3135_p4 = {{Ega_1_fu_3125_p2[63:28]}};

assign lshr_ln38_fu_3162_p4 = {{Eke_1_fu_3153_p2[63:54]}};

assign lshr_ln39_fu_3190_p4 = {{Emi_1_fu_3180_p2[63:49]}};

assign lshr_ln40_fu_3218_p4 = {{Eso_1_fu_3208_p2[63:8]}};

assign lshr_ln41_fu_3335_p4 = {{Ebi_1_fu_3326_p2[63:2]}};

assign lshr_ln42_fu_3363_p4 = {{Ego_1_fu_3353_p2[63:9]}};

assign lshr_ln43_fu_3390_p4 = {{Eku_1_fu_3381_p2[63:25]}};

assign lshr_ln44_fu_3418_p4 = {{Ema_1_fu_3408_p2[63:23]}};

assign lshr_ln45_fu_3446_p4 = {{Ese_1_fu_3436_p2[63:62]}};

assign lshr_ln4_fu_1430_p4 = {{Agi_2_fu_1420_p2[63:58]}};

assign lshr_ln5_fu_1096_p4 = {{Age_2_fu_1086_p2[63:20]}};

assign lshr_ln6_fu_1124_p4 = {{Aki_2_fu_1114_p2[63:21]}};

assign lshr_ln7_fu_1152_p4 = {{Amo_2_fu_1142_p2[63:43]}};

assign lshr_ln8_fu_1180_p4 = {{Asu_2_fu_1170_p2[63:50]}};

assign or_ln1_fu_988_p3 = {{trunc_ln139_fu_976_p1}, {tmp_1_fu_980_p3}};

assign or_ln250_fu_1822_p2 = (round_1_reg_4007 | 5'd1);

assign or_ln2_fu_1014_p3 = {{trunc_ln140_fu_1002_p1}, {tmp_2_fu_1006_p3}};

assign or_ln3_fu_1040_p3 = {{trunc_ln141_fu_1028_p1}, {tmp_3_fu_1032_p3}};

assign or_ln4_fu_1066_p3 = {{trunc_ln142_fu_1054_p1}, {tmp_4_fu_1058_p3}};

assign or_ln5_fu_2314_p3 = {{trunc_ln233_fu_2302_p1}, {tmp_6_fu_2306_p3}};

assign or_ln6_fu_2340_p3 = {{trunc_ln234_fu_2328_p1}, {tmp_7_fu_2332_p3}};

assign or_ln7_fu_2366_p3 = {{trunc_ln235_fu_2354_p1}, {tmp_8_fu_2358_p3}};

assign or_ln8_fu_2392_p3 = {{trunc_ln236_fu_2380_p1}, {tmp_9_fu_2384_p3}};

assign or_ln9_fu_2418_p3 = {{trunc_ln237_fu_2406_p1}, {tmp_10_fu_2410_p3}};

assign or_ln_fu_962_p3 = {{trunc_ln138_fu_950_p1}, {tmp_fu_954_p3}};

assign state_addr_1_reg_3866 = 64'd1;

assign state_addr_24_reg_4002 = 64'd24;

assign state_addr_2_reg_3871 = 64'd2;

assign state_addr_reg_3861 = 64'd0;

assign tmp_10_fu_2410_p3 = BCa_6_fu_2208_p2[32'd63];

assign tmp_11_fu_2881_p3 = Ebe_1_fu_2872_p2[32'd63];

assign tmp_1_fu_980_p3 = BCi_fu_896_p2[32'd63];

assign tmp_2_fu_1006_p3 = BCo_fu_920_p2[32'd63];

assign tmp_3_fu_1032_p3 = BCu_fu_944_p2[32'd63];

assign tmp_4_fu_1058_p3 = BCa_fu_848_p2[32'd63];

assign tmp_5_fu_1404_p3 = Abe_2_fu_1394_p2[32'd63];

assign tmp_6_fu_2306_p3 = BCe_6_fu_2230_p2[32'd63];

assign tmp_7_fu_2332_p3 = BCi_6_fu_2252_p2[32'd63];

assign tmp_8_fu_2358_p3 = BCo_6_fu_2274_p2[32'd63];

assign tmp_9_fu_2384_p3 = BCu_6_fu_2296_p2[32'd63];

assign tmp_fu_954_p3 = BCe_fu_872_p2[32'd63];

assign trunc_ln138_fu_950_p1 = BCe_fu_872_p2[62:0];

assign trunc_ln139_fu_976_p1 = BCi_fu_896_p2[62:0];

assign trunc_ln140_fu_1002_p1 = BCo_fu_920_p2[62:0];

assign trunc_ln141_fu_1028_p1 = BCu_fu_944_p2[62:0];

assign trunc_ln142_fu_1054_p1 = BCa_fu_848_p2[62:0];

assign trunc_ln147_fu_1092_p1 = Age_2_fu_1086_p2[19:0];

assign trunc_ln149_fu_1120_p1 = Aki_2_fu_1114_p2[20:0];

assign trunc_ln151_fu_1148_p1 = Amo_2_fu_1142_p2[42:0];

assign trunc_ln153_fu_1176_p1 = Asu_2_fu_1170_p2[49:0];

assign trunc_ln162_fu_1300_p1 = Abo_2_fu_1294_p2[35:0];

assign trunc_ln164_fu_1320_p1 = Agu_2_fu_1314_p2[43:0];

assign trunc_ln166_fu_1340_p1 = Aka_2_fu_1334_p2[60:0];

assign trunc_ln168_fu_1360_p1 = Ame_2_fu_1354_p2[18:0];

assign trunc_ln170_fu_1380_p1 = Asi_2_fu_1374_p2[2:0];

assign trunc_ln178_fu_1400_p1 = Abe_2_fu_1394_p2[62:0];

assign trunc_ln180_fu_1426_p1 = Agi_2_fu_1420_p2[57:0];

assign trunc_ln182_fu_1454_p1 = Ako_2_fu_1448_p2[38:0];

assign trunc_ln184_fu_1482_p1 = Amu_2_fu_1476_p2[55:0];

assign trunc_ln186_fu_1510_p1 = Asa_2_fu_1504_p2[45:0];

assign trunc_ln194_fu_1628_p1 = Abu_2_fu_1622_p2[36:0];

assign trunc_ln196_fu_1648_p1 = Aga_2_fu_1642_p2[27:0];

assign trunc_ln198_fu_1668_p1 = Ake_2_fu_1662_p2[53:0];

assign trunc_ln200_fu_1688_p1 = Ami_2_fu_1682_p2[48:0];

assign trunc_ln202_fu_1708_p1 = Aso_2_fu_1702_p2[7:0];

assign trunc_ln210_fu_1728_p1 = Abi_2_fu_1722_p2[1:0];

assign trunc_ln212_fu_1748_p1 = Ago_2_fu_1742_p2[8:0];

assign trunc_ln214_fu_1768_p1 = Aku_2_fu_1762_p2[24:0];

assign trunc_ln216_fu_1788_p1 = Ama_2_fu_1782_p2[22:0];

assign trunc_ln218_fu_1808_p1 = Ase_2_fu_1802_p2[61:0];

assign trunc_ln233_fu_2302_p1 = BCe_6_fu_2230_p2[62:0];

assign trunc_ln234_fu_2328_p1 = BCi_6_fu_2252_p2[62:0];

assign trunc_ln235_fu_2354_p1 = BCo_6_fu_2274_p2[62:0];

assign trunc_ln236_fu_2380_p1 = BCu_6_fu_2296_p2[62:0];

assign trunc_ln237_fu_2406_p1 = BCa_6_fu_2208_p2[62:0];

assign trunc_ln242_fu_2443_p1 = Ege_1_fu_2437_p2[19:0];

assign trunc_ln244_fu_2470_p1 = Eki_1_fu_2465_p2[20:0];

assign trunc_ln246_fu_2498_p1 = Emo_1_fu_2492_p2[42:0];

assign trunc_ln248_fu_2526_p1 = Esu_1_fu_2520_p2[49:0];

assign trunc_ln257_fu_2649_p1 = Ebo_1_fu_2644_p2[35:0];

assign trunc_ln259_fu_2677_p1 = Egu_1_fu_2671_p2[43:0];

assign trunc_ln261_fu_2704_p1 = Eka_1_fu_2699_p2[60:0];

assign trunc_ln263_fu_2732_p1 = Eme_1_fu_2726_p2[18:0];

assign trunc_ln265_fu_2760_p1 = Esi_1_fu_2754_p2[2:0];

assign trunc_ln273_fu_2877_p1 = Ebe_1_fu_2872_p2[62:0];

assign trunc_ln275_fu_2903_p1 = Egi_1_fu_2897_p2[57:0];

assign trunc_ln277_fu_2930_p1 = Eko_1_fu_2925_p2[38:0];

assign trunc_ln279_fu_2958_p1 = Emu_1_fu_2952_p2[55:0];

assign trunc_ln281_fu_2986_p1 = Esa_1_fu_2980_p2[45:0];

assign trunc_ln289_fu_3103_p1 = Ebu_1_fu_3098_p2[36:0];

assign trunc_ln291_fu_3131_p1 = Ega_1_fu_3125_p2[27:0];

assign trunc_ln293_fu_3158_p1 = Eke_1_fu_3153_p2[53:0];

assign trunc_ln295_fu_3186_p1 = Emi_1_fu_3180_p2[48:0];

assign trunc_ln297_fu_3214_p1 = Eso_1_fu_3208_p2[7:0];

assign trunc_ln305_fu_3331_p1 = Ebi_1_fu_3326_p2[1:0];

assign trunc_ln307_fu_3359_p1 = Ego_1_fu_3353_p2[8:0];

assign trunc_ln309_fu_3386_p1 = Eku_1_fu_3381_p2[24:0];

assign trunc_ln311_fu_3414_p1 = Ema_1_fu_3408_p2[22:0];

assign trunc_ln313_fu_3442_p1 = Ese_1_fu_3436_p2[61:0];

assign xor_ln131_1_fu_836_p2 = (Asa_1_fu_228 ^ Aga_1_fu_288);

assign xor_ln131_2_fu_842_p2 = (xor_ln131_1_fu_836_p2 ^ Aba_1_fu_308);

assign xor_ln131_fu_830_p2 = (Ama_1_fu_248 ^ Aka_1_fu_268);

assign xor_ln132_1_fu_860_p2 = (Ase_1_fu_224 ^ Age_1_fu_284);

assign xor_ln132_2_fu_866_p2 = (xor_ln132_1_fu_860_p2 ^ Abe_1_fu_304);

assign xor_ln132_fu_854_p2 = (Ame_1_fu_244 ^ Ake_1_fu_264);

assign xor_ln133_1_fu_884_p2 = (Asi_1_fu_220 ^ Agi_1_fu_280);

assign xor_ln133_2_fu_890_p2 = (xor_ln133_1_fu_884_p2 ^ Abi_1_fu_300);

assign xor_ln133_fu_878_p2 = (Ami_1_fu_240 ^ Aki_1_fu_260);

assign xor_ln134_1_fu_908_p2 = (Aso_1_fu_216 ^ Ago_1_fu_276);

assign xor_ln134_2_fu_914_p2 = (xor_ln134_1_fu_908_p2 ^ Abo_1_fu_296);

assign xor_ln134_fu_902_p2 = (Amo_1_fu_236 ^ Ako_1_fu_256);

assign xor_ln135_1_fu_932_p2 = (Amu_1_fu_232 ^ Abu_1_fu_292);

assign xor_ln135_2_fu_938_p2 = (xor_ln135_1_fu_932_p2 ^ Asu_1_fu_312);

assign xor_ln135_fu_926_p2 = (Aku_1_fu_252 ^ Agu_1_fu_272);

assign xor_ln154_fu_1198_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1106_p3);

assign xor_ln155_fu_1210_p2 = (and_ln154_fu_1204_p2 ^ Aba_4_fu_1080_p2);

assign xor_ln156_fu_1222_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1134_p3);

assign xor_ln157_fu_1240_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1162_p3);

assign xor_ln158_fu_1258_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1190_p3);

assign xor_ln159_fu_1276_p2 = (64'd18446744073709551615 ^ Aba_4_fu_1080_p2);

assign xor_ln171_fu_1862_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1838_p3);

assign xor_ln172_fu_1880_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1844_p3);

assign xor_ln173_fu_1898_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1850_p3);

assign xor_ln174_fu_1916_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1856_p3);

assign xor_ln175_fu_1934_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1832_p3);

assign xor_ln187_fu_1532_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1440_p3);

assign xor_ln188_fu_1550_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1468_p3);

assign xor_ln189_fu_1568_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1496_p3);

assign xor_ln190_fu_1586_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1524_p3);

assign xor_ln191_fu_1604_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1412_p3);

assign xor_ln203_fu_1982_p2 = (64'd18446744073709551615 ^ BCe_4_fu_1958_p3);

assign xor_ln204_fu_2000_p2 = (64'd18446744073709551615 ^ BCi_4_fu_1964_p3);

assign xor_ln205_fu_2018_p2 = (64'd18446744073709551615 ^ BCo_4_fu_1970_p3);

assign xor_ln206_fu_2036_p2 = (64'd18446744073709551615 ^ BCu_4_fu_1976_p3);

assign xor_ln207_fu_2054_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1952_p3);

assign xor_ln219_fu_2102_p2 = (64'd18446744073709551615 ^ BCe_5_fu_2078_p3);

assign xor_ln220_fu_2120_p2 = (64'd18446744073709551615 ^ BCi_5_fu_2084_p3);

assign xor_ln221_fu_2138_p2 = (64'd18446744073709551615 ^ BCo_5_fu_2090_p3);

assign xor_ln222_fu_2156_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2096_p3);

assign xor_ln223_fu_2174_p2 = (64'd18446744073709551615 ^ BCa_5_fu_2072_p3);

assign xor_ln226_1_fu_2197_p2 = (Esa_fu_2114_p2 ^ Eba_reg_4020);

assign xor_ln226_2_fu_2202_p2 = (xor_ln226_1_fu_2197_p2 ^ Ega_fu_1874_p2);

assign xor_ln226_fu_2192_p2 = (Ema_fu_1994_p2 ^ Eka_reg_4100);

assign xor_ln227_1_fu_2220_p2 = (Eke_reg_4106 ^ Ebe_reg_4026);

assign xor_ln227_2_fu_2224_p2 = (xor_ln227_1_fu_2220_p2 ^ Ese_fu_2132_p2);

assign xor_ln227_fu_2214_p2 = (Eme_fu_2012_p2 ^ Ege_fu_1892_p2);

assign xor_ln228_1_fu_2241_p2 = (Esi_fu_2150_p2 ^ Egi_fu_1910_p2);

assign xor_ln228_2_fu_2247_p2 = (xor_ln228_1_fu_2241_p2 ^ Eki_reg_4112);

assign xor_ln228_fu_2236_p2 = (Emi_fu_2030_p2 ^ Ebi_reg_4032);

assign xor_ln229_1_fu_2264_p2 = (Eso_fu_2168_p2 ^ Eko_reg_4118);

assign xor_ln229_2_fu_2269_p2 = (xor_ln229_1_fu_2264_p2 ^ Ebo_reg_4038);

assign xor_ln229_fu_2258_p2 = (Emo_fu_2048_p2 ^ Ego_fu_1928_p2);

assign xor_ln230_1_fu_2285_p2 = (Esu_fu_2186_p2 ^ Ebu_reg_4044);

assign xor_ln230_2_fu_2290_p2 = (xor_ln230_1_fu_2285_p2 ^ Emu_fu_2066_p2);

assign xor_ln230_fu_2280_p2 = (Eku_reg_4124 ^ Egu_fu_1946_p2);

assign xor_ln249_fu_2548_p2 = (64'd18446744073709551615 ^ BCe_7_fu_2457_p3);

assign xor_ln250_fu_2560_p2 = (and_ln249_fu_2554_p2 ^ Eba_2_fu_2432_p2);

assign xor_ln251_fu_2572_p2 = (64'd18446744073709551615 ^ BCi_7_fu_2484_p3);

assign xor_ln252_fu_2590_p2 = (64'd18446744073709551615 ^ BCo_7_fu_2512_p3);

assign xor_ln253_fu_2608_p2 = (64'd18446744073709551615 ^ BCu_7_fu_2540_p3);

assign xor_ln254_fu_2626_p2 = (64'd18446744073709551615 ^ Eba_2_fu_2432_p2);

assign xor_ln266_fu_2782_p2 = (64'd18446744073709551615 ^ BCe_8_fu_2691_p3);

assign xor_ln267_fu_2800_p2 = (64'd18446744073709551615 ^ BCi_8_fu_2718_p3);

assign xor_ln268_fu_2818_p2 = (64'd18446744073709551615 ^ BCo_8_fu_2746_p3);

assign xor_ln269_fu_2836_p2 = (64'd18446744073709551615 ^ BCu_8_fu_2774_p3);

assign xor_ln270_fu_2854_p2 = (64'd18446744073709551615 ^ BCa_8_fu_2663_p3);

assign xor_ln282_fu_3008_p2 = (64'd18446744073709551615 ^ BCe_9_fu_2917_p3);

assign xor_ln283_fu_3026_p2 = (64'd18446744073709551615 ^ BCi_9_fu_2944_p3);

assign xor_ln284_fu_3044_p2 = (64'd18446744073709551615 ^ BCo_9_fu_2972_p3);

assign xor_ln285_fu_3062_p2 = (64'd18446744073709551615 ^ BCu_9_fu_3000_p3);

assign xor_ln286_fu_3080_p2 = (64'd18446744073709551615 ^ BCa_9_fu_2889_p3);

assign xor_ln298_fu_3236_p2 = (64'd18446744073709551615 ^ BCe_10_fu_3145_p3);

assign xor_ln299_fu_3254_p2 = (64'd18446744073709551615 ^ BCi_10_fu_3172_p3);

assign xor_ln300_fu_3272_p2 = (64'd18446744073709551615 ^ BCo_10_fu_3200_p3);

assign xor_ln301_fu_3290_p2 = (64'd18446744073709551615 ^ BCu_10_fu_3228_p3);

assign xor_ln302_fu_3308_p2 = (64'd18446744073709551615 ^ BCa_10_fu_3117_p3);

assign xor_ln314_fu_3464_p2 = (64'd18446744073709551615 ^ BCe_11_fu_3373_p3);

assign xor_ln315_fu_3482_p2 = (64'd18446744073709551615 ^ BCi_11_fu_3400_p3);

assign xor_ln316_fu_3500_p2 = (64'd18446744073709551615 ^ BCo_11_fu_3428_p3);

assign xor_ln317_fu_3518_p2 = (64'd18446744073709551615 ^ BCu_11_fu_3456_p3);

assign xor_ln318_fu_3536_p2 = (64'd18446744073709551615 ^ BCa_11_fu_3345_p3);

assign zext_ln128_fu_808_p1 = round_fu_316;

assign zext_ln250_fu_1827_p1 = or_ln250_fu_1822_p2;

endmodule //expand_mat_KeccakF1600_StatePermute
